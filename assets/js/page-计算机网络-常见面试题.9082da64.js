(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{1029:function(t,e,a){"use strict";a.r(e);var _=a(1),v=Object(_.a)({},(function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("div",{staticClass:"custom-block warning"},[_("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),_("p",[t._v("本文转载自以下文章，略有改动。")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://www.jianshu.com/p/576dbf44b2ae",target:"_blank",rel:"noopener noreferrer"}},[t._v("什么是 JWT -- JSON WEB TOKEN - 简书 (jianshu.com)"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://www.jianshu.com/p/e4d9dcda0558",target:"_blank",rel:"noopener noreferrer"}},[t._v("JWT如何实现登录、鉴权 - 简书 (jianshu.com)"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/356225028",target:"_blank",rel:"noopener noreferrer"}},[t._v("面试题：聊聊TCP的粘包、拆包以及解决方案 - 知乎 (zhihu.com)"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://bbs.csdn.net/topics/40099566",target:"_blank",rel:"noopener noreferrer"}},[t._v("服务器端一个端口可以响应很多客户端的请求吗？-CSDN社区"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://www.cnblogs.com/yinbiao/p/11014863.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用TCP的协议有哪些？使用UDP的协议有哪些？ - 西*风 - 博客园 (cnblogs.com)"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://blog.csdn.net/Emperor10/article/details/123179056",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP请求协议格式详解_Emperor10的博客-CSDN博客_http请求协议"),_("OutboundLink")],1)])])]),t._v(" "),_("h2",{attrs:{id:"ip地址和mac地址"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ip地址和mac地址"}},[t._v("#")]),t._v(" IP地址和MAC地址")]),t._v(" "),_("blockquote",[_("p",[t._v("网上看到的一些区别和联系，感觉总结的有点无关痛痒。我觉得最重要的一点是，两个都是地址，那共存的必要和意义在哪里。下面是我的一些口胡，不一定对。")])]),t._v(" "),_("p",[t._v("IP地址的划分是基于网络的拓扑结构、基于地理区域，这样的好处是，我能很快地找到某个IP地址。比如我想和 "),_("code",[t._v("192.168.1.20")]),t._v(" 取得通信，我可以先找到 "),_("code",[t._v("192.0.0.0")]),t._v(" 的位置，进而再找到 "),_("code",[t._v("192.168.0.0")]),t._v(" 的位置，最后摸索到 "),_("code",[t._v("192.168.1.20")]),t._v(" 的位置（当然，这是路由器干的活）。")]),t._v(" "),_("p",[t._v("IP地址的意义在于，根据地理区域划分；具有相同网络号的（就当是ip地址的前缀）的IP地址会被划分到一起。这样的划分下，我们能够较快地找到某个IP地址。")]),t._v(" "),_("p",[_("s",[t._v("那好了，有IP地址就够了咯。再整一个MAC地址多烦人")])]),t._v(" "),_("p",[t._v("IP地址是方便了，但是基于地理区域划分之后的问题是，你带不走他。如果你的电子设备从上海带到了北京，哪怕只是换了个小区，都会离开原来的IP地址。但是一个设备又必须拥有自己的【唯一标识】，于是需要MAC地址。")]),t._v(" "),_("p",[t._v("通过IP地址与MAC地址的捆绑，想要和某一台主机进行通信。则需要通过IP地址快速定位到该主机所在的区域，尽可能地缩小范围之后，通过MAC地址去确认主机的【身份】。")]),t._v(" "),_("div",{staticClass:"custom-block note"},[_("p",{staticClass:"custom-block-title"},[t._v("比喻")]),t._v(" "),_("p",[t._v("把网络通信当作是寄快递，IP地址就是你的家庭住址，MAC地址是你的身份证。")]),t._v(" "),_("p",[t._v("通过家庭住址<国家-省份-城市-区-街-小区-楼幢-楼层-门牌号>一步一步找到你家里来，然后签收的时候核验一下你的身份证，确认接收方无误之后把快递交给你。")])]),t._v(" "),_("h2",{attrs:{id:"http请求格式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http请求格式"}},[t._v("#")]),t._v(" HTTP请求格式")]),t._v(" "),_("p",[t._v("请求行 + 请求头部 + 空行 + 请求主体。")]),t._v(" "),_("p",[_("img",{attrs:{src:a(559),alt:"image-20220315081628361",loading:"lazy"}})]),t._v(" "),_("h3",{attrs:{id:"请求方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#请求方法"}},[t._v("#")]),t._v(" 请求方法")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"center"}},[t._v("方法")]),t._v(" "),_("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("GET")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("获取资源")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("POST")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("传输实体主体")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("PUT")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("传输文件")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("HEAD")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("获得报文首部")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("DELETE")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("删除文件")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("OPTIONS")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("询问支持的方法")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("TRACE")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("追踪路径")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("CONNECT")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("要求用隧道协议链接代理")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("LINK")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("建立和资源之间的联系")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("UNLINE")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("断开连接关系")])])])]),t._v(" "),_("h3",{attrs:{id:"首部字段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#首部字段"}},[t._v("#")]),t._v(" 首部字段")]),t._v(" "),_("p",[_("strong",[t._v("通用首部字段")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"center"}},[t._v("首部字段名")]),t._v(" "),_("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Cache-Control")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("控制缓存的行为")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Connection")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("逐跳首部、连接的管理")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Date")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("创建报文的日期时间")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Pragma")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("报文指令")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Trailer")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("报文末端的首部一览")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Transfer-Encoding")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("指定报文主体的传输编码方式")])])])]),t._v(" "),_("p",[_("strong",[t._v("请求首部字段")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"center"}},[t._v("方法")]),t._v(" "),_("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Accept")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("用户代理可处理的媒体类型")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Accept-Charset")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("优先的字符集")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Accept-Encoding")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("优先的内容编码")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Accept-Language")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("优先的语言")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("From")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("用户的电子邮箱地址")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Host")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("请求资源所在服务器")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Range")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("实体的字节范围请求")])])])]),t._v(" "),_("p",[_("strong",[t._v("响应首部字段")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"center"}},[t._v("方法")]),t._v(" "),_("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Accept-Ranges")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("是否接受字节范围请求")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Location")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("令客户重定向至指定URI")])])])]),t._v(" "),_("p",[_("strong",[t._v("实体首部字段")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"center"}},[t._v("方法")]),t._v(" "),_("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Allow")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("资源可支持的HTTP方法")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Content-Encoding")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("实体主体适用的编码方式")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Content-Language")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("实体主体的自然语言")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Content-Length")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("实体主体的大小（字节）")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Content-Length")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("替代对应资源的URI")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Content-Range")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("实体主体的位置范围")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("Content-Type")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("实体主体的媒体类型")])])])]),t._v(" "),_("h2",{attrs:{id:"tcp、udp协议的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp、udp协议的区别"}},[t._v("#")]),t._v(" TCP、UDP协议的区别")]),t._v(" "),_("p",[_("img",{attrs:{src:a(560),alt:"TCP、UDP协议的区别",loading:"lazy"}})]),t._v(" "),_("p",[t._v("UDP 在传送数据之前不需要先建立连接，远地主机在收到 UDP 报文后，不需要给出任何确认。虽然 UDP 不提供可靠交付，但在某些情况下 UDP 却是一种最有效的工作方式（一般用于即时通信），比如： QQ 语音、 QQ 视频 、直播等等")]),t._v(" "),_("p",[t._v("TCP 提供面向连接的服务。在传送数据之前必须先建立连接，数据传送结束后要释放连接。 TCP 不提供广播或多播服务。由于 TCP 要提供可靠的，面向连接的传输服务（TCP 的可靠体现在 TCP 在传递数据之前，会有三次握手来建立连接，而且在数据传递时，有确认、窗口、重传、拥塞控制机制，在数据传完后，还会断开连接用来节约系统资源），这一难以避免增加了许多开销，如确认，流量控制，计时器以及连接管理等。这不仅使协议数据单元的首部增大很多，还要占用许多处理机资源。TCP 一般用于文件传输、发送和接收邮件、远程登录等场景。")]),t._v(" "),_("h2",{attrs:{id:"使用tcp、udp的协议"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#使用tcp、udp的协议"}},[t._v("#")]),t._v(" 使用TCP、UDP的协议")]),t._v(" "),_("p",[_("strong",[t._v("运行于TCP协议之上的协议：")])]),t._v(" "),_("p",[t._v("HTTP协议：超文本传输协议，用于普通浏览")]),t._v(" "),_("p",[t._v("HTTPS协议：安全超文本传输协议，身披SSL外衣的HTTP协议")]),t._v(" "),_("p",[t._v("FTP协议：文件传输协议，用于文件传输")]),t._v(" "),_("p",[t._v("POP3协议：邮局协议，收邮件使用")]),t._v(" "),_("p",[t._v("SMTP协议：简单邮件传输协议，用来发送电子邮件")]),t._v(" "),_("p",[t._v("Telent协议：远程登陆协议，通过一个终端登陆到网络")]),t._v(" "),_("p",[t._v("SSH协议：安全外壳协议，用于加密安全登陆，替代安全性差的Telent协议")]),t._v(" "),_("p",[_("strong",[t._v("运行于UDP协议之上的协议：")])]),t._v(" "),_("p",[t._v("DNS协议：用于域名解析服务")]),t._v(" "),_("p",[t._v("DHCP协议：动态主机配置协议，动态配置IP地址")]),t._v(" "),_("p",[t._v("NTP协议：网络时间协议，用于网络时间同步")]),t._v(" "),_("p",[t._v("BOOTP协议：引导程序协议，DHCP协议的前身，用于无盘工作站从中心服务器上获取IP地址")]),t._v(" "),_("h2",{attrs:{id:"状态码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#状态码"}},[t._v("#")]),t._v(" 状态码")]),t._v(" "),_("p",[t._v("下面是常见的 HTTP 状态码：")]),t._v(" "),_("ul",[_("li",[t._v("200 - 请求成功")]),t._v(" "),_("li",[t._v("301 - 资源（网页等）被永久转移到其它URL")]),t._v(" "),_("li",[t._v("404 - 请求的资源（网页等）不存在")]),t._v(" "),_("li",[t._v("500 - 内部服务器错误")])]),t._v(" "),_("p",[_("img",{attrs:{src:a(561),alt:"状态码",loading:"lazy"}})]),t._v(" "),_("h2",{attrs:{id:"如何保存用户状态"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何保存用户状态"}},[t._v("#")]),t._v(" 如何保存用户状态")]),t._v(" "),_("p",[t._v("**HTTP 是一种不保存状态，即无状态（stateless）协议。**也就是说 HTTP 协议自身不对请求和响应之间的通信状态进行保存。")]),t._v(" "),_("p",[t._v("Session 机制的存在就是为了解决这个问题，Session 的主要作用就是"),_("strong",[t._v("通过服务端记录用户的状态")]),t._v("。典型的场景是购物车，当你要添加商品到购物车的时候，系统不知道是哪个用户操作的，因为 HTTP 协议是无状态的。服务端给特定的用户创建特定的 Session 之后就可以标识这个用户并且跟踪这个用户了（一般情况下，服务器会在一定时间内保存这个 Session，过了时间限制，就会销毁这个 Session）。")]),t._v(" "),_("p",[t._v("在服务端保存 Session 的方法很多，最常用的就是内存和数据库(比如是使用内存数据库 redis 保存)。既然 Session 存放在服务器端，那么我们如何实现 Session 跟踪呢？大部分情况下，我们都是"),_("strong",[t._v("通过在 Cookie 中附加一个 Session ID 来方式来跟踪")]),t._v("。")]),t._v(" "),_("h3",{attrs:{id:"cookie被禁用怎么办"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cookie被禁用怎么办"}},[t._v("#")]),t._v(" Cookie被禁用怎么办")]),t._v(" "),_("p",[t._v("最常用的就是利用 URL 重写把 Session ID 直接附加在 URL 路径的后面。")]),t._v(" "),_("h3",{attrs:{id:"cookie-和-session"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cookie-和-session"}},[t._v("#")]),t._v(" Cookie 和 Session")]),t._v(" "),_("p",[t._v("Cookie 和 Session 都是用来跟踪浏览器用户身份的会话方式，但是两者的应用场景不太一样。")]),t._v(" "),_("p",[_("strong",[t._v("Cookie 一般用来保存用户信息")]),t._v(" ：")]),t._v(" "),_("ol",[_("li",[t._v("我们在 Cookie 中保存已经登录过的用户信息，下次访问网站的时候页面可以自动帮你把登录的一些基本信息给填了；")]),t._v(" "),_("li",[t._v("一般的网站都会有保持登录，也就是说下次你再访问网站的时候就不需要重新登录了，这是因为用户登录的时候我们可以存放了一个 Token 在 Cookie 中，下次登录的时候只需要根据 Token 值来查找用户即可(为了安全考虑，重新登录一般要将 Token 重写)；")]),t._v(" "),_("li",[t._v("登录一次网站后访问网站其他页面不需要重新登录。")])]),t._v(" "),_("p",[_("strong",[t._v("Session 的主要作用就是通过服务端记录用户的状态。")]),t._v(" 典型的场景是购物车，当你要添加商品到购物车的时候，系统不知道是哪个用户操作的，因为 HTTP 协议是无状态的。服务端给特定的用户创建特定的 Session 之后就可以标识这个用户并且跟踪这个用户了。")]),t._v(" "),_("p",[t._v("Cookie 存储在客户端中，而 Session 存储在服务器上，相对来说 Session 安全性更高。如果要在 Cookie 中存储一些敏感信息，不要直接写入 Cookie 中，最好能将 Cookie 信息加密，然后使用到的时候再去服务器端解密。")]),t._v(" "),_("h2",{attrs:{id:"uri-和-url-的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#uri-和-url-的区别"}},[t._v("#")]),t._v(" URI 和 URL 的区别")]),t._v(" "),_("ul",[_("li",[t._v("URI(Uniform Resource Identifier) 是统一资源标志符，可以唯一标识一个资源。")]),t._v(" "),_("li",[t._v("URL(Uniform Resource Locator) 是统一资源定位符，可以提供该资源的路径。它是一种具体的 URI，即 URL 可以用来标识一个资源，而且还指明了如何 locate 这个资源。")])]),t._v(" "),_("p",[t._v("URI 的作用像身份证号一样，URL 的作用更像家庭住址一样。URL 是一种具体的 URI，它不仅唯一标识资源，而且还提供了定位该资源的信息")]),t._v(" "),_("h2",{attrs:{id:"json-web-token"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#json-web-token"}},[t._v("#")]),t._v(" Json Web Token")]),t._v(" "),_("p",[t._v("Json web token（JWT）是为了网络应用环境间传递声明而执行的一种基于JSON的开发标准（RFC 7519），该token被设计为紧凑且安全的，特别适用于分布式站点的单点登陆（SSO）场景。")]),t._v(" "),_("div",{staticClass:"custom-block note"},[_("p",{staticClass:"custom-block-title"},[t._v("传统的session认证")]),t._v(" "),_("p",[t._v("客户端向服务器发送用户信息，服务器验证之后向客户端发放 sessionid。客户端将 sessionid 保存在cookie 中，需要用时将 sessionid 发给服务器验证即可。")]),t._v(" "),_("p",[t._v("基于session认证的问题")]),t._v(" "),_("ul",[_("li",[t._v("session：通常而言 session 都是保存在内存中，而随着认证用户的增多，服务端的开销会明显增大")]),t._v(" "),_("li",[t._v("扩展性：用户认证之后，服务端做认证记录，如果认证的记录被保存在内存中的话，这意味着用户下次请求还必须要请求在这台服务器上，这样才能拿到授权的资源，这样在分布式的应用上，相应的限制了负载均衡器的能力。这也意味着限制了应用的扩展能力。")]),t._v(" "),_("li",[t._v("安全性：信息如果被截获，用户就会很容易受到跨站请求伪造的攻击")])])]),t._v(" "),_("h3",{attrs:{id:"jwt-认证流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#jwt-认证流程"}},[t._v("#")]),t._v(" JWT 认证流程")]),t._v(" "),_("ol",[_("li",[t._v("浏览器发起请求登陆，携带用户名和密码；")]),t._v(" "),_("li",[t._v("服务端验证身份，根据算法，将用户标识符打包生成 token")]),t._v(" "),_("li",[t._v("服务器返回 JWT 信息给浏览器，JWT不包含敏感信息；")]),t._v(" "),_("li",[t._v("浏览器发起请求获取用户资料，把刚刚拿到的 token 一起发送给服务器；")]),t._v(" "),_("li",[t._v("服务器发现数据中有 token，验明正身；")]),t._v(" "),_("li",[t._v("服务器返回该用户的用户资料；")])]),t._v(" "),_("p",[_("img",{attrs:{src:a(562),alt:"img",loading:"lazy"}})]),t._v(" "),_("h3",{attrs:{id:"jwt-优缺点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#jwt-优缺点"}},[t._v("#")]),t._v(" JWT 优缺点")]),t._v(" "),_("p",[t._v("优点：")]),t._v(" "),_("ul",[_("li",[t._v("json 的通用性，可以跨语言")]),t._v(" "),_("li",[t._v("组成简单，字节占用笑，便于传输")]),t._v(" "),_("li",[t._v("服务端无需保存会话信息，便于扩展")])]),t._v(" "),_("p",[t._v("缺点：")]),t._v(" "),_("ul",[_("li",[t._v("payload 部分进行简单编码，不宜存放敏感信息")])]),t._v(" "),_("h3",{attrs:{id:"jwt-构成"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#jwt-构成"}},[t._v("#")]),t._v(" JWT 构成")]),t._v(" "),_("p",[t._v("JSON Web Token由【头部(Header)、载荷(Payload)、签证(Signature)】三部分组成，它们之间用圆点(.)连接。")]),t._v(" "),_("ul",[_("li",[t._v("头部。头部承载两部分信息：声明类型，这里是jwt；声明加密的算法，通常直接使用 HMAC SHA256")]),t._v(" "),_("li",[t._v("载荷。Payload 部分也是一个 JSON 对象，用来存放实际需要传递的数据。")]),t._v(" "),_("li",[t._v("签证。Signature 部分是对前两部分的签名，防止数据篡改。")])]),t._v(" "),_("p",[t._v("首先，需要指定一个密钥（secret）。这个密钥只有服务器才知道，不能泄露给用户。然后，使用 Header 里面指定的签名算法（默认是 HMAC SHA256），按照下面的公式产生签名。")]),t._v(" "),_("blockquote",[_("p",[t._v('HMACSHA256(  base64UrlEncode(header) + "." +  base64UrlEncode(payload),   secret)')])]),t._v(" "),_("p",[t._v('算出签名以后，把 Header、Payload、Signature 三个部分拼成一个字符串，每个部分之间用"点"（.）分隔，就构成整个JWT对象TOKEN， 就可以返回给用户。')]),t._v(" "),_("h2",{attrs:{id:"服务端一个端口响应多个客户端请求"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务端一个端口响应多个客户端请求"}},[t._v("#")]),t._v(" 服务端一个端口响应多个客户端请求")]),t._v(" "),_("p",[t._v("服务端至少要有一个SOCKET处于监听状态（Listen），负责监听针对某个端口（Port）的连接请求；\n当客户端的请求到达时，动态创建（new）一个SOCKET用于连接，此时，用于监听的SOCKET再次进入监听状态（调用Listen），此后，由参与连接的SOCKET完成与客户端的通信过程。\n通常，创建几百个连接是可以，但不会同时启动上百个线程同时处理所有的请求；如果同时请求的客户端比较多（比如＞50），则通常启动固定数目（低于请求）的线程，请求排队等待处理。\n线程的数目参考处理的速度，如果是瞬间完成的，则可以少，如果处理较慢，则可以多")])])}),[],!1,null,null,null);e.default=v.exports},559:function(t,e,a){t.exports=a.p+"assets/img/image-20220315081628361.45a076a6-16506218004142.45a076a6.png"},560:function(t,e,a){t.exports=a.p+"assets/img/tcp-vs-udp.b693cae1.jpg"},561:function(t,e,a){t.exports=a.p+"assets/img/状态码.1c78607b.png"},562:function(t,e,a){t.exports=a.p+"assets/img/jwt.bc2e4448.png"}}]);