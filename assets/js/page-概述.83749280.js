(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{1110:function(t,s,a){"use strict";a.r(s);var l=a(1),v=Object(l.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("转载声明")]),t._v(" "),a("ul",[a("li",[t._v("《深入理解Java虚拟机》")])])]),t._v(" "),a("h2",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),a("p",[t._v("垃圾收集需要完成的三件事情：")]),t._v(" "),a("ul",[a("li",[t._v("哪些内存需要回收")]),t._v(" "),a("li",[t._v("什么时候回收")]),t._v(" "),a("li",[t._v("如何回收")])]),t._v(" "),a("p",[t._v("当需要排查各种内存溢出、内存泄漏问题时，当垃圾收集成为系统达到更高并发量的瓶颈时，我们就必须对这些【自动化】的技术实施必要的监控和调节。")]),t._v(" "),a("p",[t._v("Java堆和方法区这两个区域则有着很显著的不确定性：一个接口的多个实现类需要的内存可能会不一样，一个方法所执行的不同条件分支所需要的内存也可能不一样，只有处于运行期间，我们才能知道程序究竟会创建哪些对象，创建多少个对象，这部分内存的分配和回收是动态的。垃圾收集器所关注的正是这部分内存该如何管理，本文后续讨论中的【内存】分配与回收也仅仅特指这一部分内存。")])])}),[],!1,null,null,null);s.default=v.exports}}]);